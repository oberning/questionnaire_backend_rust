//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "question")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub text: String,
    pub max_score: i32,
    pub questionnaire_id: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::answer::Entity")]
    Answer,
    #[sea_orm(
        belongs_to = "super::questionnaire::Entity",
        from = "Column::QuestionnaireId",
        to = "super::questionnaire::Column::Id",
        on_update = "NoAction",
        on_delete = "NoAction"
    )]
    Questionnaire,
}

impl Related<super::answer::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Answer.def()
    }
}

impl Related<super::questionnaire::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Questionnaire.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
